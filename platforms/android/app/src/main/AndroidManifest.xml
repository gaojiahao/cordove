<?xml version='1.0' encoding='utf-8'?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.refordom.roletask"
    android:hardwareAccelerated="true"
    android:versionCode="10000"
    android:versionName="1.0.0">

    <application
        android:hardwareAccelerated="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:usesCleartextTraffic="true"
        android:name=".CustomApplication">
        <activity
            android:name="MainActivity"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|locale|smallestScreenSize|screenLayout|uiMode"
            android:label="@string/activity_name"
            android:launchMode="singleTop"
            android:theme="@android:style/Theme.DeviceDefault.NoActionBar"
            android:windowSoftInputMode="adjustResize">
            <intent-filter android:label="@string/launcher_name">
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name="de.appplant.cordova.plugin.localnotification.ClickReceiver"
            android:exported="false"
            android:launchMode="singleInstance"
            android:theme="@android:style/Theme.Translucent" />

        <meta-data
            android:name="push_kit_auto_init_enabled"
            android:value="true" /><!--华为push-->
        <provider
            android:name="de.appplant.cordova.plugin.notification.util.AssetProvider"
            android:authorities="${applicationId}.provider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/localnotification_provider_paths" />
        </provider>

        <provider
            android:name="io.github.pwlin.cordova.plugins.fileopener2.FileProvider"
            android:authorities="${applicationId}.provider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/opener_paths" />
        </provider>
        <provider
            android:name=".authentication.SyncProvider"
            android:authorities="@string/account_provide" />

        <receiver
            android:name="de.appplant.cordova.plugin.localnotification.TriggerReceiver"
            android:exported="false" />
        <receiver
            android:name="de.appplant.cordova.plugin.localnotification.ClearReceiver"
            android:exported="false" />
        <!-- push应用定义消息receiver声明 -->

        <receiver     android:name=".push.VivoPushMessageReceiverImpl" >

            <intent-filter>

                <!-- 接收push消息 -->

                <action   android:name="com.vivo.pushclient.action.RECEIVE"   />

            </intent-filter>

        </receiver>

        <service
            android:name="com.tencent.smtt.export.external.DexClassLoaderProviderService"
            android:label="dexopt"
            android:process=":dexopt"></service>
        <service
            android:name=".DeskService"
            android:enabled="true"
            android:exported="false"
            android:process=":daemon_service" />
        <service
            android:name=".CancelNoticeService"
            android:enabled="true"
            android:exported="false" />
        <service
            android:name=".DSService"
            android:enabled="true"
            android:exported="false" />
        <!-- 账户服务 -->
        <service android:name=".authentication.AuthenticationService">
            <intent-filter>
                <action android:name="android.accounts.AccountAuthenticator" />
            </intent-filter>
            <meta-data
                android:name="android.accounts.AccountAuthenticator"
                android:resource="@xml/accountauthenticator" />
        </service>
        <service android:name=".authentication.SyncService">
            <intent-filter>
                <action android:name="android.content.SyncAdapter" />
            </intent-filter>
            <meta-data
                android:name="android.content.SyncAdapter"
                android:resource="@xml/sync_adapter" />
        </service>
        <!--华为的消息推送-->
        <provider
            android:name="com.huawei.agconnect.core.provider.AGConnectInitializeProvider"
            android:authorities="${applicationId}.AGCInitializeProvider"
            android:exported="false" />
        <service
            android:name="com.huawei.agconnect.core.ServiceDiscovery"
            android:exported="false" />
        <service
            android:name=".push.HwPushService"
            android:exported="false">
            <intent-filter>
                <action android:name="com.huawei.push.action.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        <service
            android:name="com.huawei.hms.support.api.push.service.HmsMsgService"
            android:enabled="true"
            android:exported="true"
            android:process=":pushservice">
            <intent-filter>
                <action android:name="com.huawei.push.msg.NOTIFY_MSG" />
                <action android:name="com.huawei.push.msg.PASSBY_MSG" />
            </intent-filter>
        </service>
        <!--华为推送代码结束-->
        <!--Vivo Push需要配置的service、activity--> 

<service 

            android:name="com.vivo.push.sdk.service.CommandClientService" 

        android:exported="true"/>    

<!--Vivo Push开放平台中应用的appid 和api key--> 

<meta-data 

        android:name="com.vivo.push.api_key" 

        android:value="${vivoAppKey}"/>

<meta-data 

        android:name="com.vivo.push.app_id" 

        android:value="${vivoAppId}"/>
    <!--vivo push over-->
    <!--ximo push-->
    <service
    android:name="com.xiaomi.push.service.XMPushService"
    android:enabled="true"
    android:process=":pushservice" />

<!--注：此service必须在3.0.1版本以后（包括3.0.1版本）加入-->
<service
    android:name="com.xiaomi.push.service.XMJobService"
    android:enabled="true"
    android:exported="false"
    android:permission="android.permission.BIND_JOB_SERVICE"
    android:process=":pushservice" />

<service
    android:name="com.xiaomi.mipush.sdk.PushMessageHandler"
    android:enabled="true"
    android:exported="true" />

<!--注：此service必须在2.2.5版本以后（包括2.2.5版本）加入-->
<service
    android:name="com.xiaomi.mipush.sdk.MessageHandleService"
    android:enabled="true" />

<receiver
    android:name="com.xiaomi.push.service.receivers.NetworkStatusReceiver"
    android:exported="true">
    <intent-filter>
        <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
        <category android:name="android.intent.category.DEFAULT" />
    </intent-filter>
</receiver>

<receiver
    android:name="com.xiaomi.push.service.receivers.PingReceiver"
    android:exported="false"
    android:process=":pushservice">
    <intent-filter>
        <action android:name="com.xiaomi.push.PING_TIMER" />
    </intent-filter>
</receiver>
<receiver
  android:exported="true"
  android:name=".push.MiPushReceiver">
          <!--这里com.xiaomi.mipushdemo.DemoMessageRreceiver改成app中定义的完整类名-->
  <intent-filter>
    <action android:name="com.xiaomi.mipush.RECEIVE_MESSAGE" />
  </intent-filter>
    <intent-filter>
    <action android:name="com.xiaomi.mipush.MESSAGE_ARRIVED" />
  </intent-filter>
  <intent-filter>
    <action android:name="com.xiaomi.mipush.ERROR" />
  </intent-filter>
</receiver>
<!--ximo push over-->
    </application>
    
    <supports-screens
        android:anyDensity="true"
        android:largeScreens="true"
        android:normalScreens="true"
        android:resizeable="true"
        android:smallScreens="true"
        android:xlargeScreens="true" />

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.REQUEST_INSTALL_PACKAGES" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" /><!--读写内存-->
    <uses-permission android:name="android.permission.VIBRATE" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" /><!--前台服务-->
    <!--tbs 需要-->
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <!--uses-permission android:name="android.permission.WRITE_SETTINGS"
        tools:ignore="ProtectedPermissions" -->
    <!--账户同步-->
    <uses-permission android:name="android.permission.AUTHENTICATE_ACCOUNTS" /><!--添加帐户需要权限-->
    <uses-permission android:name="android.permission.GET_ACCOUNTS" /><!--电话相关  // 查看帐户需要权限-->

    <uses-permission android:name="android.permission.WRITE_SYNC_SETTINGS" /><!--账户同步 写入Google在线同步设置-->
    <permission
        android:name="${applicationId}.permission.PROCESS_PUSH_MSG"
        android:protectionLevel="signatureOrSystem" />
    <!-- HMS-SDK 接收PUSH TOKEN的广播以及PUSH消息需要定义该权限 ${PACKAGE_NAME} 要替换上您应用的包名 -->
    <uses-permission android:name="${applicationId}.permission.PROCESS_PUSH_MSG" />
    <permission android:name="${applicationId}.permission.MIPUSH_RECEIVE"
android:protectionLevel="signature" /> <!--这里com.xiaomi.mipushdemo改成app的包名-->

<uses-permission android:name="${applicationId}.permission.MIPUSH_RECEIVE" /><!--这里com.xiaomi.mipushdemo改成app的包名-->
</manifest>
